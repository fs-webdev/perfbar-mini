"use strict";!function(){var a=".justice{position:fixed;bottom:0;left:0;right:0;background:black;padding:0 10px 10px 10px;box-sizing:border-box;font-size:12px;font-family:monospace;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-flow:row wrap;-ms-flex-flow:row wrap;flex-flow:row wrap;-webkit-box-pack:justify;-webkit-justify-content:space-between;-ms-flex-pack:justify;justify-content:space-between;z-index:2147483647;-webkit-transition:400ms ease-in-out;transition:400ms ease-in-out;direction:ltr}@media (min-width: 1235px){.justice{padding-bottom:10px;}}.justice.closed{-webkit-transform:translateY(100%);-ms-transform:translateY(100%);transform:translateY(100%)}.justice .justice-metric-wrap{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-flow:wrap;-ms-flex-flow:wrap;flex-flow:wrap;-webkit-box-pack:justify;-webkit-justify-content:space-between;-ms-flex-pack:justify;justify-content:space-between}.justice .justice-metric{height:40px;display:inline-block;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-box-align:center;-webkit-align-items:center;-ms-flex-align:center;align-items:center;margin:10px 10px 0 0}.justice .justice-metric.chart{width:300px}.justice .justice-title{text-transform:uppercase;padding:3px 0.5em 3px 3px;color:#dfdfdf}.justice .justice-text{color:#dfdfdf;font-weight:600}.justice .justice-text.pass{color:#419ba3}.justice .justice-text.warn{color:#d4ca3d}.justice .justice-text.fail{color:#ce452d}.justice .justice-toggle{width:20px;height:20px;cursor:pointer;background-color:black;position:absolute;right:0;top:-20px;opacity:0.5;border-top-left-radius:50%;-webkit-transition:400ms ease-in-out;transition:400ms ease-in-out}@media only screen and (min-device-pixel-ratio: 1.1){.justice .justice-toggle{width:40px;height:40px;top:-40px;}}.justice .justice-toggle:after{content:'';position:absolute;width:50%;height:50%;border-radius:100%;margin:5px;background-color:#dfdfdf;-webkit-transition:400ms ease-in-out;transition:400ms ease-in-out}@media only screen and (min-device-pixel-ratio: 1.1){.justice .justice-toggle:after{margin:10px;}}.justice.closed .justice-toggle{opacity:1}.justice.closed .justice-toggle:after{background-color:#419ba3}",b=document.createElement("style");if(document.getElementsByTagName("head")[0].appendChild(b),b.styleSheet)b.styleSheet.disabled||(b.styleSheet.cssText=a);else try{b.innerHTML=a}catch(c){b.innerText=a}}();var Justice=function(){function a(a){var b={},a=a||{};for(var c in W)b[c]=W[c];for(var c in a)b[c]=a[c];return b}function b(a,b,c){for(var d in a.metrics)b[d]=c[d]}function c(){return O.loadEventStart-O.navigationStart}function d(){return O.domComplete-O.domLoading}function e(){return O.domInteractive-O.domLoading}function f(){var a=0;return window.chrome&&window.chrome.loadTimes?(a=1e3*window.chrome.loadTimes().firstPaintTime,a-=1e3*window.chrome.loadTimes().startLoadTime,a.toFixed(0)):"number"==typeof window.performance.timing.msFirstPaint?(a=window.performance.timing.msFirstPaint,a-=window.performance.timing.navigationStart,a.toFixed(0)):"¯\\_(ツ)_/¯"}function g(){return performance.getEntries?performance.getEntries().length:"¯\\_(ツ)_/¯"}function h(){return O.responseStart-O.connectEnd}function i(a){if(T){var b=(a-T)/1e3,c=1/b,d=c>60?60:Math.floor(c);R=d,S.push([d,d]),S.length>L&&S.shift(),T=a}else T=a}function j(a,b){var c="";return c=a>b?"fail":a>b*X.warnThreshold?"warn":"pass"}function k(a,b,c){var d=b.collector(),e=j(d,c);return['<div class="'+G+'-metric" id="'+b.id+'">','<span class="'+G+'-title">'+b.label+": </span>",'<span class="'+G+"-text "+e+'">'+d+b.unitLabel+"</span>","</div>"].join("")}function l(a){var b=[];for(var c in Z){var d=k(c,Z[c],X.metrics[c].budget);b.push(d)}return'<div id="'+G+'-text-metrics" class="'+G+'-metric-wrap">'+b.join("")+"</div>"}function m(){var a=X.showFPS?['<div class="'+G+'-metric chart">','<span class="'+G+'-title">FPS: </span>','<canvas id="'+G+'-fps" class="'+G+'-canvas" height="'+I+'" width="'+H+'"></canvas>',"</div>"].join(""):"";return a}function n(a,b){a.clearRect(0,0,b.width,b.height),q(a),o(a),p(a)}function o(a){var b=10;a.font="600 "+b+"px sans-serif",a.fillStyle=D,a.fillText(0,0,I),a.fillStyle=E,a.fillText(30,0,I/2+b/2),a.fillStyle=F,a.fillText(60,0,0+b)}function p(a){var b=a.createLinearGradient(0,I,0,0);b.addColorStop(0,D),b.addColorStop(.25,D),b.addColorStop(.5,E),b.addColorStop(1,F),a.strokeStyle=b,a.fillStyle=b}function q(a){for(var b=0;3>b;b++){var c=I/2*b+.5-(2===b?1:0);a.beginPath(),a.moveTo(.5+K,c),a.lineTo(H+.5,c),a.lineWidth=1,a.strokeStyle=C,a.stroke()}}function r(a){var b=null;return"spline"===a?b=t:"dots"===a&&(b=s),b}function s(a,b,c){n(a,b);for(var d=0;d<c.length;d++){var e=(60-c[d][1])*J;a.fillRect(c.length-d+K,e,1.5,1.5)}}function t(a,b,c){n(a,b),a.beginPath();var d=c.length>0?c[c.length]:0;a.moveTo(0,d);for(var e=0;e<c.length;e++){var f=0===e?0:e,g=(60-c[e][1])*J;a.lineTo(c.length-f+K,g)}a.lineWidth=1,a.stroke()}function u(){U=document.getElementById(G+"-fps"),V=U.getContext("2d")}function v(){var a=z();P=document.createElement("div"),P.id=G,P.classList.add(G),P.classList.add(a),document.body.appendChild(P),P=document.getElementById(G),P.innerHTML=['<div id="'+G+'-toggle" class="'+G+'-toggle"></div>',l(),m()].join(""),X.showFPS&&u(),x()}function w(){var a=l(Z),b=document.getElementById(G+"-text-metrics");b.innerHTML=a}function x(){document.getElementById(G+"-toggle").onclick=function(){var a=document.getElementById(G);a.className.match(" closed")?(a.className=a.className.replace(" closed",""),y("open")):(a.className+=" closed",y("closed"))}}function y(a){window.localStorage&&window.localStorage.setItem(G+"-state",a)}function z(){return window.localStorage?window.localStorage.getItem(G+"-state")||"open":void 0}function A(a){N++,X.showFPS&&(i(a),Q(V,U,S)),null===M?M=a:a-M>3e3&&(M=a,w()),window.requestAnimationFrame(A)}function B(c){O=window.performance.timing,X=a(c),b(X,Z,Y),v(),Q=r(X.chartType),window.requestAnimationFrame(A)}var C="rgb(48, 48, 48)",D="rgb(206, 69, 45)",E="rgb(212, 202, 61)",F="rgb(65, 155, 163)",G="justice",H=300,I=40,J=I/60,K=20,L=H-K,M=0,N=0,O=null,P=null,Q=null,R=0,S=[],T=null,U=null,V=null,W={metrics:{TTFB:{budget:200},domInteractive:{budget:250},domComplete:{budget:800},firstPaint:{budget:1e3},pageLoad:{budget:2e3},requests:{budget:6}},"interface":{position:"fixed",placement:"bottom"},warnThreshold:.8,chartType:"spline",showFPS:!0},X={},Y={pageLoad:{id:G+"-load",label:"Load",unitLabel:"ms",collector:c},firstPaint:{id:G+"-paint",label:"Paint",unitLabel:"ms",collector:f},TTFB:{id:G+"-ttfb",label:"TTFB",unitLabel:"ms",collector:h},domComplete:{id:G+"-complete",label:"Complete",unitLabel:"ms",collector:d},domInteractive:{id:G+"-interactive",label:"Interactive",unitLabel:"ms",collector:e},requests:{id:G+"-requests",label:"Requests",unitLabel:"",collector:g}},Z={};return{init:function(a){"performance"in window&&"timing"in window.performance?"complete"===document.readyState?B(a,"already loaded"):window.onload=function(){B(a)}:console.log("Justice: performance api not supported in this browser, initialization stopped.")}}}();
// HELPER UTILS
/*
* Recursively merge properties of two objects 
*/
function mergeRecursive(obj1, obj2) {
  for (var p in obj2) {
    try {
      // Property in destination object set; update its value.
      if ( obj2[p].constructor==Object ) {
        obj1[p] = mergeRecursive(obj1[p], obj2[p]);
      } else {
        obj1[p] = obj2[p];
      }
    } catch(e) {
      // Property in destination object not set; create it and set its value.
      obj1[p] = obj2[p];
    }
  }
  return obj1;
}

// Justice Addons module
window.fsJustice = function(){
  var config = false;
  if(arguments.length > 0){
    config = arguments[0];
  }
  config.gradeGoal = config.gradeGoal || 'D'; // set default gradeGoal to 'D' unless specified
  (function(win,doc){
    var localDev = true; // for local debugging
    var perfBarAddons = window.perfBarAddons = {
      scenario: {},
      budget: {},
      currentBudget: {}
    };

    /* BUDGETS.
     * One for Cable/Desktop
     * One for 3G/Mobile
     * TODO: swap budgets with persistence. For now, just test cable/desktop
     * TODO: get budgets via endpoint, so they will always be up-to-date, even when pins are not. "PerfBudget as a Service"
     */
    var storageKey = 'fs-performance-budget';
    var scenarioKey = storageKey+'-scenario';
    var storedBudget = JSON.parse(win.sessionStorage.getItem(storageKey));
    var storedScenario = JSON.parse(win.sessionStorage.getItem(scenarioKey));
    //measure time from start to around perfbar init.
    console.time('getBudget');
    // don't need to check for date staleness, since this is sessionStorage, it expires when tab or browser is closed

    // Set performance budget scenario
    // read persistent state, if exists
    if(storedScenario){
      setScenario(storedScenario.pageType, storedScenario.connection);
    } else {
      if(config.pageType){
        perfBarAddons.scenario.pageType = config.pageType;            // default state
      } else {
        perfBarAddons.scenario.pageType = 'landing';                  // default state
      }
      if(config.defaultConnection){
        perfBarAddons.scenario.connection = config.defaultConnection; // default state        
      } else {
        perfBarAddons.scenario.connection = 'cable-desktop';          // default state
      }
      setScenario(perfBarAddons.scenario.pageType, perfBarAddons.scenario.connection);
    }

    if(storedBudget){
      perfBarAddons.budget = storedBudget;
      initPerfBar(perfBarAddons.budget);
    } else {
      getNewData(function(data){
        perfBarAddons.budget = data;
        initPerfBar(data);
      });
    }

    function getNewData(cb){
      var budgetURL = localDev ? 'https://edge.fscdn.org/assets/budgets/performance-budget-jsonp.min.json' : '//edge.fscdn.org/assets/budgets/performance-budget-jsonp.min.json';
      // vanillaJS AJAX jsonp call
      var scr = document.createElement('script');
      scr.src = budgetURL;
      document.body.appendChild(scr);
      // Had to hoist this at window level for jsonp to execute
      window.getData = function getData(data) {
        storeNewData(data, function(data1){
          cb(data1);
        });
      }
    }


    function storeNewData(data, cb) {
      perfBarAddons.budget = data;
      win.sessionStorage.setItem(storageKey, JSON.stringify(data));
      if(cb) cb(data);
    }


    function setScenario(pageType, connection, cb){
      if(pageType){
        perfBarAddons.scenario.pageType = pageType;
      }
      if(connection){
        perfBarAddons.scenario.connection = connection;
      }
      storeNewScenario({
        pageType: perfBarAddons.scenario.pageType,
        connection: perfBarAddons.scenario.connection
      }, function(){
        if(cb) cb();
      });
    }


    // save persistent scenario state
    function storeNewScenario(data, cb) {
      if(data.pageType && data.connection){
        win.sessionStorage.setItem(scenarioKey, JSON.stringify(data));
        if(cb) cb(data);
      } else {
        if(cb) cb();
      }
    }
    

    var defaultJusticeConfig; // hoisted


    function init(){
      var initConfig = defaultJusticeConfig;                               // set default config to defaultJusticeConfig
      if (arguments.length > 0) {
        // set page default scenario
        initConfig = mergeRecursive(defaultJusticeConfig, arguments[0]);     // if user passes in overrides, use them
      }
      win.console.log('Perfbar config:',initConfig);
      Justice.init(initConfig);
      afterRender();  // do things that happen after justice ui render
    }


    function initPerfBar(budget){
      /* let local overrides win budget defaults */
      if(config.budgets) {
        budget = config.budgets;
      }
      var currentBudget = config.budgets ? perfBarAddons.currentBudget = config.budgets[perfBarAddons.scenario.connection] : perfBarAddons.currentBudget = budget[perfBarAddons.scenario.pageType][perfBarAddons.scenario.connection];
      var maxBudget = {
        'loadTime': {
          max: currentBudget.LoadTime[config.gradeGoal]
        },
        'latency': {
          max: currentBudget.Latency[config.gradeGoal]
        },
        'FirstPaint': {
          max: currentBudget.FirstPaint[config.gradeGoal]
        }
      };
      if(currentBudget.domInteractive) {
        maxBudget.domInteractive = currentBudget.FirstPaint[config.gradeGoal];
      }

      defaultJusticeConfig = {
        metrics: {
          TTFB:             { budget: maxBudget.latency.max },
          domInteractive:   { budget: maxBudget.domInteractive ? maxBudget.domInteractive.max : 250 },
          domComplete:      { budget: maxBudget.domComplete ? maxBudget.domComplete.max : 100 },
          firstPaint:       { budget: maxBudget.FirstPaint.max || 1000 },
          pageLoad:         { budget: maxBudget.loadTime.max || 2000 },
          requests:         { budget: maxBudget.requests ? maxBudget.requests.max : 6 }
        },
        warnThreshold: 0.8,
        showFPS: false,
        chartType: 'spline'
      };
      if(config.justice){
        init(config.justice);
      } else {
        init();
      }
    }


    function updatePerfBar(){
      win.location.reload(); // override with page reload
    }
    
    function afterRender() { // do things after justice UI has been rendered
      win.requestAnimationFrame(function(){
        var ui = document.getElementById('justice');
        if(!ui) {
          return afterRender();
        } else {
          loadDeferreds();
        }
      });
    }
    
    function loadDeferreds(){
      // return checked if item matches scenario
      function isChecked(type, value) {
        var checked = '';
        if(type == 'pageType'){
          checked = (perfBarAddons.scenario.pageType == value) ? 'checked' : '';
        }
        if(type == 'connection'){
          checked = (perfBarAddons.scenario.connection == value) ? 'checked' : '';
        }
        return checked;
      }

      // create new content for perfbar
      var switches = doc.createElement('div');
      switches.innerHTML = ''+
      '<div class="justice-switch">'+
        '<abbr title="Compare page against different budgets per pagetype">'+
          '<h5 class="perfBar-label">Pagetype:</h3>'+
          '<div class="switch">'+
            '<input type="radio" class="switch-input" name="pagetype" value="landing" id="landing" onclick="perfBarAddons.handleSwitchClick(this)" ' + isChecked('pageType', 'landing') + '>'+
            '<label for="landing" class="switch-label switch-label-off">Landing</label>'+
            '<input type="radio" class="switch-input" name="pagetype" value="general" id="general" onclick="perfBarAddons.handleSwitchClick(this)" ' + isChecked('pageType', 'general') + '>'+
            '<label for="general" class="switch-label switch-label-on">General</label>'+
            '<span class="switch-selection"></span>'+
          '</div>'+
        '</abbr>'+
      '</div>'+
      '<div class="justice-switch">'+
        '<abbr title="Compare page against different budgets per connection type">'+
          '<h5 class="perfBar-label">Connection:</h3>'+
          '<div class="switch">'+
            '<input type="radio" class="switch-input" name="connection" value="cable-desktop" id="cable-desktop" onclick="perfBarAddons.handleSwitchClick(this)" ' + isChecked('connection', 'cable-desktop') + '>'+
            '<label for="cable-desktop" class="switch-label switch-label-off">Cable</label>'+
            '<input type="radio" class="switch-input" name="connection" value="3G-mobile" id="3G-mobile" onclick="perfBarAddons.handleSwitchClick(this)" ' + isChecked('connection', '3G-mobile') + '>'+
            '<label for="3G-mobile" class="switch-label switch-label-on">3G</label>'+
            '<span class="switch-selection"></span>'+
          '</div>'+
        '</abbr>'+
      '</div>';

      switches.className = 'justice-scenarios closed';
      switches.id = 'justice-scenarios';
      
      var switchToggle = doc.createElement('div');
      switchToggle.className = 'justice-switch-toggle';
      switchToggle.innerHTML = '<a href="#" id="justice-switch-toggle-button" onclick="perfBarAddons.handleSwitchToggleClick(); return false;" title="Set Default Scenario">+</a>';
      
      var statsElem = doc.getElementById('justice');
      var scenariosElem = doc.querySelector('.justice-scenarios');

      // inject new content onto perfbar
      statsElem.appendChild(switchToggle, statsElem.firstChild);
      statsElem.appendChild(switches, statsElem.firstChild);

      // toggle switch area visibility
      perfBarAddons.handleSwitchToggleClick = function() {
        var switchElem = doc.getElementById('justice-scenarios');
        switchElem.classList.toggle('closed');
      }

      // bind budget toggles
      perfBarAddons.handleSwitchClick = function(myRadio) {
        if(myRadio.name === 'pagetype'){
          setScenario(myRadio.value, null, function() {
            console.log('pagetype switch changed!');
            updatePerfBar();
          });
        } else if(myRadio.name === 'connection') {
          setScenario(null, myRadio.value, function() {
            console.log('connection switch changed!');
            updatePerfBar();
          })
        } else {
          console.error('ERROR: Perfbar >> perfbarHandleClick : not a valid switch');
        }
        console.log('PerfBar: New performance budget scenario. Pagetype:',perfBarAddons.scenario.pageType,'Connection:',perfBarAddons.scenario.connection);
      }
    }

  })(window,document);
};
function injectStyles(rule) {
var div = document.createElement("div");
div.innerHTML = "&shy;<style>" + rule + "</style>";
document.body.appendChild(div.childNodes[1]);
}
injectStyles('#justice{font-size:13px;font-family:"Verdana",sans-serif}#justice .justice-metric-wrap{justify-content:center}#justice .justice-metric{margin:5px 5px 0 0;height:inherit}#justice .justice-switch-toggle{color:#fff;height:10px;display:flex;width:100%;flex-direction:row-reverse;align-items:flex-end}#justice .justice-switch-toggle>a{color:#fff;padding:.5em;font-size:20px;font-weight:700;z-index:2;text-decoration:none}#justice .justice-scenarios{width:100%;margin:1em auto;height:inherit;display:flex;flex-flow:wrap;justify-content:center;transition:400ms ease-in-out;bottom:0%;left:0%;right:0%;position:absolute;background:rgba(0,0,0,.8)}#justice .justice-scenarios.closed{transform:translateY(110%)}#justice .justice-scenarios h5{color:#fff;display:flex;align-items:center;justify-content:center;font-family:"Verdana",sans-serif;margin:.5em 0}#justice .justice-scenarios .perfBar-switches{padding:0;margin:0 auto 10px;color:#404040;display:flex;align-items:center;justify-content:center;flex-wrap:wrap}#justice .justice-scenarios .perfBar-switches>div{padding:5px 10px}#justice .justice-scenarios .switch{position:relative;height:26px;width:120px;background:rgba(0,0,0,.25);-webkit-box-shadow:inset 0 1px 3px rgba(0,0,0,.3),0 1px rgba(255,255,255,.1);box-shadow:inset 0 1px 3px rgba(0,0,0,.3),0 1px rgba(255,255,255,.1);background-color:#333;border-radius:4px;margin:0 .5em}#justice .justice-scenarios .switch-label{position:relative;z-index:2;float:left;width:58px;line-height:26px;font-size:11px;color:#fff;text-align:center;text-shadow:0 1px 1px rgba(0,0,0,.45);cursor:pointer}#justice .justice-scenarios .switch-label:active{font-weight:700}#justice .justice-scenarios .switch-label-off{padding-left:2px}#justice .justice-scenarios .switch-label-on{padding-right:2px}#justice .justice-scenarios .switch-input{display:none}#justice .justice-scenarios .switch-input:checked+.switch-label{font-weight:700;color:#333;text-shadow:0 1px rgba(255,255,255,.25);-webkit-transition:.15s ease-out;-moz-transition:.15s ease-out;-o-transition:.15s ease-out;transition:.15s ease-out}#justice .justice-scenarios .switch-input:checked+.switch-label-on~.switch-selection{left:60px}#justice .justice-scenarios .switch-selection{display:block;position:absolute;z-index:1;top:2px;left:2px;width:58px;height:22px;background:#65bd63;border-radius:3px;background-image:-webkit-linear-gradient(top,#9dd993,#65bd63);background-image:-moz-linear-gradient(top,#9dd993,#65bd63);background-image:-o-linear-gradient(top,#9dd993,#65bd63);background-image:linear-gradient(to bottom,#9dd993,#65bd63);-webkit-box-shadow:inset 0 1px rgba(255,255,255,.5),0 0 2px rgba(0,0,0,.2);box-shadow:inset 0 1px rgba(255,255,255,.5),0 0 2px rgba(0,0,0,.2);-webkit-transition:left .15s ease-out;-moz-transition:left .15s ease-out;-o-transition:left .15s ease-out;transition:left .15s ease-out}#justice .justice-scenarios .switch-blue .switch-selection{background:#3aa2d0;background-image:-webkit-linear-gradient(top,#4fc9ee,#3aa2d0);background-image:-moz-linear-gradient(top,#4fc9ee,#3aa2d0);background-image:-o-linear-gradient(top,#4fc9ee,#3aa2d0);background-image:linear-gradient(to bottom,#4fc9ee,#3aa2d0)}#justice .justice-scenarios .switch-yellow .switch-selection{background:#c4bb61;background-image:-webkit-linear-gradient(top,#e0dd94,#c4bb61);background-image:-moz-linear-gradient(top,#e0dd94,#c4bb61);background-image:-o-linear-gradient(top,#e0dd94,#c4bb61);background-image:linear-gradient(to bottom,#e0dd94,#c4bb61)}');
